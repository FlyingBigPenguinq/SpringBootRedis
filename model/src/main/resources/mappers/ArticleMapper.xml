<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.boot.Redis.model.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.study.boot.Redis.model.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="scan_total" jdbcType="INTEGER" property="scanTotal" />
    <result column="praise_total" jdbcType="INTEGER" property="praiseTotal" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, content, user_id, scan_total, praise_total, is_active, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.study.boot.Redis.model.entity.Article">
    insert into article (id, title, content, 
      user_id, scan_total, praise_total, 
      is_active, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{scanTotal,jdbcType=INTEGER}, #{praiseTotal,jdbcType=INTEGER}, 
      #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.study.boot.Redis.model.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="scanTotal != null">
        scan_total,
      </if>
      <if test="praiseTotal != null">
        praise_total,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="scanTotal != null">
        #{scanTotal,jdbcType=INTEGER},
      </if>
      <if test="praiseTotal != null">
        #{praiseTotal,jdbcType=INTEGER},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.boot.Redis.model.entity.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="scanTotal != null">
        scan_total = #{scanTotal,jdbcType=INTEGER},
      </if>
      <if test="praiseTotal != null">
        praise_total = #{praiseTotal,jdbcType=INTEGER},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.boot.Redis.model.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      scan_total = #{scanTotal,jdbcType=INTEGER},
      praise_total = #{praiseTotal,jdbcType=INTEGER},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="com.study.boot.Redis.model.entity.Article">
    select a.*,b.name as userName from
    article as a left join 'user' as b
    on a.user_id = b.id
    where a.is_active = 1
    order by a.create_time desc
  </select>

  <update id="updatePraiseTotal">
    update article
    set praise_total = praise_total + #{flag},
    update_time = now()
    where is_active = 1 and id = #{articleId}
  </update>

  <select id="selectByPK" resultMap="com.study.boot.Redis.model.entity.Article">
    select a.*,b.name as userName from
    article as a left join 'user' as b
    on a.user_id = b.id
    where a.is_active = 1 and a.id = #{articleId}
  </select>
</mapper>
